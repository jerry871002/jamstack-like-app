version: "3.4"

services:
  web:
    image: nginx
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - 7800:7800
    depends_on:
      - ui
      - api
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    command: [nginx-debug, '-g', 'daemon off;']

  ui:
    build: ui
    image: ui
    restart: "no"
    volumes:
      - ./ui/src/:/app/src
    ports:
      - 7778:7778
    depends_on:
      - api
    env_file:
      - project.env

  api:
    build: api
    image: api
    volumes:
      - ./api/:/app
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 7777:7777
    depends_on:
      - database
      - flyway
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    env_file:
      - project.env

  database:
    container_name: dab-p2-database-241aeb30-1196-4170-9da8-af8125742941
    image: postgres:14.1
    restart: "no"
    env_file:
      - project.env

  flyway:
    image: flyway/flyway:8.4.0-alpine
    depends_on:
      - database
    volumes:
      - .:/flyway/sql
    command: -connectRetries=60 -baselineOnMigrate=true migrate
    env_file:
      - project.env

  rabbitmq:
    image: rabbitmq:3.11-management
    ports:
      - 5672:5672
      - 15672:15672

  grader:
    build: grader
    image: grader
    depends_on:
      - rabbitmq
    deploy:
      restart_policy:
        condition: on-failure
        delay: 5s
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock